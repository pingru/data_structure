# 递归 两个特性:
# 1.调用自身--->hanoi()函数定义的时候:hanoi()函数调用自身hanoi()函数
# 2.有结束条件--->n为0,所有的盘子(n个盘子)都被移动走,所以n>0是结束条件

# 递归实例化:
# 实现汉诺塔问题
# 有n个盘子
# hanoi(n,a,b,c)代表问题将n个盘子从a柱,经过b柱,移动到c柱
def hanoi(n, a, b, c):
    global i
    if n > 0:
        # 第1步
        # n-1个盘子从a柱,经过c柱,移动到b柱
        hanoi(n - 1, a, c, b)
        # 第2步
        # 将最大的那个第n个盘子从a柱移动到c柱
        i = i + 1
        print('第%s步' % (i))
        print('将盘子从%s柱移动到%s柱' % (a, c))
        # 第3步
        # n-1个盘子从b柱,经过a柱,移动到c柱
        hanoi(n - 1, b, a, c)


# 汉诺塔函数调用,传入具体参数:
i = 0
hanoi(3, 'A', 'B', 'C')
